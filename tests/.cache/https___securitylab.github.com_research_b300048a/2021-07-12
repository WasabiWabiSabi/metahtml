<!DOCTYPE html>
<html lang="en">
<head>
  <!-- META DATA -->
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <link rel="preload" href="/assets/css/index.css" as="style">
  <link rel="preload" href="/assets/js/main.js" as="script">
  <!--[if IE]><meta http-equiv="cleartype" content="on" /><![endif]-->
  <link rel="canonical" href="https://securitylab.github.com/research/">
  <link rel="alternate" type="application/rss+xml" title="GitHub Security Lab" href="/feed.xml">
  <link rel="stylesheet" media="screen" href="/assets/css/index.css" />
  <script async src="https://js.maxmind.com/js/apis/geoip2/v2.1/geoip2.js"></script>
  <script src="/assets/js/jquery.js"></script>
  <link id="favicon" rel="shortcut icon" type="image/ico" href="/assets/img/favicons/favicon.png" />
  <link rel="apple-touch-icon" href="/assets/img/favicons/apple-touch-icon.png" />
  <link rel="icon" href="/assets/img/favicons/android-favicon.png">
  <!-- Begin Jekyll SEO tag v2.7.1 -->
<title>Research | GitHub Security Lab</title>
<meta name="generator" content="Jekyll v3.9.0" />
<meta property="og:title" content="Research" />
<meta property="og:locale" content="en_US" />
<meta name="description" content="Securing the world’s software, together" />
<meta property="og:description" content="Securing the world’s software, together" />
<link rel="canonical" href="https://securitylab.github.com/research/" />
<meta property="og:url" content="https://securitylab.github.com/research/" />
<meta property="og:site_name" content="GitHub Security Lab" />
<meta property="og:image" content="https://securitylab.github.com/assets/img/social-card.png" />
<meta name="twitter:card" content="summary_large_image" />
<meta property="twitter:image" content="https://securitylab.github.com/assets/img/social-card.png" />
<meta property="twitter:title" content="Research" />
<meta name="twitter:site" content="@GHSecurityLab" />
<script type="application/ld+json">
{"headline":"Research","description":"Securing the world’s software, together","url":"https://securitylab.github.com/research/","@type":"WebPage","image":"https://securitylab.github.com/assets/img/social-card.png","@context":"https://schema.org"}</script>
<!-- End Jekyll SEO tag -->

</head>

<body class="no-js page-research">
  <a class="skip-to-content" href="#content">skip to content</a>

  <div class="d-none d-md-block py-2 bg-gray-dark">
  <div class="container-lg p-responsive d-flex flex-md-justify-between"><a class="d-block text-white no-underline" href="https://github.com" data-ga-click="Top bar, go to github, text:Back to GitHub.com">Back to GitHub.com</a></div>
</div>
<nav class="site-navigation UnderlineNav d-block">
  <div class="container-lg d-flex flex-items-center px-3 px-md-6 px-lg-3 py-0">
    <svg height="32" class="octicon octicon-mark-github mr-2" viewBox="0 0 16 16" version="1.1" width="32" aria-hidden="true">
      <path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z"></path>
    </svg>
    <a aria-current="page" role="tab" title="Security Lab" class="UnderlineNav-item UnderlineNav-item--logo" href="/">Security Lab</a>
    <div class="UnderlineNav-body flex-auto flex-justify-end hide-sm hide-md" role="tablist">
      <a role="tab" title="Bounties" class="UnderlineNav-item " href="/bounties">Bounties</a>
      <a role="tab" title="CodeQL"  class="UnderlineNav-item " href="/tools/codeql">CodeQL</a>
      <a role="tab" title="Research" class="UnderlineNav-item  selected" href="/research">Research</a>
      <a role="tab" title="Advisories" class="UnderlineNav-item " href="/advisories">Advisories</a>
      <a role="tab" title="Get Involved" class="UnderlineNav-item " href="/get-involved">Get Involved</a>
      <a role="tab" title="Events" class="UnderlineNav-item " href="/events">Events</a>
		</div>
    <div class="flex-auto d-flex flex-justify-end hide-lg hide-xl"><button aria-label="Menu" aria-expanded="false" class="sc-VigVT sc-jzJRlG facTgp js-menu-trigger"><svg aria-hidden="true" class="sc-dxgOiQ hTjMfW" height="16" role="img" viewBox="0 0 12 16" width="12" style="display:inline-block;fill:currentColor;user-select:none;vertical-align:text-bottom"><path fill-rule="evenodd" d="M11.41 9H.59C0 9 0 8.59 0 8c0-.59 0-1 .59-1H11.4c.59 0 .59.41.59 1 0 .59 0 1-.59 1h.01zm0-4H.59C0 5 0 4.59 0 4c0-.59 0-1 .59-1H11.4c.59 0 .59.41.59 1 0 .59 0 1-.59 1h.01zM.59 11H11.4c.59 0 .59.41.59 1 0 .59 0 1-.59 1H.59C0 13 0 12.59 0 12c0-.59 0-1 .59-1z"></path></svg></button><div></div></div>
  </div>
</nav>

<div class="mobile-nav">
  <div>
    <a role="tab" title="Bounties" class="UnderlineNav-item " href="/">Home</a>
    <a role="tab" title="Bounties" class="UnderlineNav-item " href="/bounties">Bounties</a>
    <a role="tab" title="CodeQL"  class="UnderlineNav-item " href="/tools/codeql">CodeQL</a>
    <a role="tab" title="Research" class="UnderlineNav-item  selected" href="/research">Research</a>
    <a role="tab" title="Advisories" class="UnderlineNav-item " href="/advisories">Advisories</a>
    <a role="tab" title="Get Involved" class="UnderlineNav-item " href="/get-involved">Get Involved</a>
    <a role="tab" title="Events" class="UnderlineNav-item " href="/events">Events</a>
  </div>
</div>
<span class="mobile-nav-screen js-menu-trigger"></span>


  <main id="content" class="main page-content" aria-label="Content">
    <div class="container-lg p-responsive my-8">
  <div class="sc-hqyNC djzDlk mt-7 mt-md-12 pt-md-9">
    <div class="sc-eqIVtm iIqwMX posts-header-dots d-none d-md-block">
      <img src="/assets/img/svgs/blog-header-svg.svg" alt="dots" style="top:-46.5px;left:-46.5px" />
    </div>

    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/Fail2exploit/"><span>July 1, 2021</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>Security</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/Fail2exploit/">Fail2exploit: a security audit of Fail2ban</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          The story of how I failed to find any vulnerabilities in Fail2ban.
        </p>

        
        
        
        
        


        <a href="https://github.com/kevinbackhouse" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/4358136?s=35" height="35" width="35" /><span>Kevin Backhouse</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/rhino-in-the-room/"><span>April 19, 2021</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>LiveQL</li>
          
          <li>CodeQL</li>
          
          <li>Java</li>
          
          <li>CVE</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/rhino-in-the-room/">LiveQL Episode II: The Rhino in the room</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          On March 17, we [streamed](https://www.youtube.com/watch?v=wPqK-Ealz-0) our second episode of LiveQL. For those of you who missed it or prefer to read instead, this post provides a run through of the details, including lessons learned.
        </p>

        
        
        
        
        


        <a href="https://github.com/pwntester" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/125701?s=35" height="35" width="35" /><span>Alvaro Munoz</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/fuzzing-apache-2/"><span>March 30, 2021</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>Fuzzing</li>
          
          <li>Apache HTTP</li>
          
          <li>Address Sanitizer</li>
          
          <li>Interceptors</li>
          
          <li>CVE</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/fuzzing-apache-2/">Fuzzing sockets: Apache HTTP, Part 2: Custom Interceptors</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          In this second installment, I will focus on how to build our own custom ASAN interceptors in order to catch memory bugs when custom memory pools are implemented and also on how to intercept file system syscalls to detect logic errors in the target application.
        </p>

        
        
        
        
        


        <a href="https://github.com/antonio-morales" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/55253029?s=35" height="35" width="35" /><span>Antonio Morales</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/one_day_short_of_a_fullchain_renderer/"><span>March 24, 2021</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>Chrome</li>
          
          <li>Security</li>
          
          <li>Exploit</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/one_day_short_of_a_fullchain_renderer/">One day short of a full chain: Part 3 - Chrome renderer RCE</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          In this last post of the series, I'll exploit a use-after-free in the Chrome renderer (CVE-2020-15972), a bug that I reported in September 2020 but turned out to be a duplicate, to gain remote code execution in the sandboxed renderer process in Chrome.
        </p>

        
        
        
        
        


        <a href="https://github.com/m-y-mo" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/15773368?s=35" height="35" width="35" /><span>Man Yue Mo</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/one_day_short_of_a_fullchain_sbx/"><span>March 16, 2021</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>Chrome</li>
          
          <li>Security</li>
          
          <li>Exploit</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/one_day_short_of_a_fullchain_sbx/">One day short of a full chain: Part 2 - Chrome sandbox escape</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          In this second post of the series, I'll exploit a use-after-free in the Payment component of Chrome (1125614/GHSL-2020-165), a bug that I reported in September 2020 that only affected version 86 of Chrome, which was in beta. I'll use it to escape the Chrome sandbox to gain privilege of a third party App on Android from a compromised renderer.
        </p>

        
        
        
        
        


        <a href="https://github.com/m-y-mo" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/15773368?s=35" height="35" width="35" /><span>Man Yue Mo</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/one_day_short_of_a_fullchain_android/"><span>March 10, 2021</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>Android</li>
          
          <li>Kernel</li>
          
          <li>Security</li>
          
          <li>Exploit</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/one_day_short_of_a_fullchain_android/">One day short of a full chain: Part 1 - Android Kernel arbitrary code execution</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          In this series of posts, I'll go through the exploit of three security bugs that I reported, which, when used together, can achieve remote kernel code execution in Qualcomm's devices by visiting a malicious website in a beta version of Chrome. In this first post, I'll exploit a use-after-free in Qualcomm's kgsl driver (CVE-2020-11239), a bug that I reported in July 2020 and that was fixed in January 2021, to gain arbitrary kernel code execution from the application domain.
        </p>

        
        
        
        
        


        <a href="https://github.com/m-y-mo" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/15773368?s=35" height="35" width="35" /><span>Man Yue Mo</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/fuzzing-apache-1/"><span>March 2, 2021</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>Fuzzing</li>
          
          <li>Apache HTTP</li>
          
          <li>AFL</li>
          
          <li>CVE</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/fuzzing-apache-1/">Fuzzing sockets: Apache HTTP, Part 1: Mutations</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          In this first episode, I’ll do a brief introduction on how Apache HTTP works, and I’ll give you some insights into custom mutators and how they can be applied to the HTTP protocol effectively.
        </p>

        
        
        
        
        


        <a href="https://github.com/antonio-morales" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/55253029?s=35" height="35" width="35" /><span>Antonio Morales</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/github-actions-untrusted-input/"><span>January 28, 2021</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>Actions</li>
          
          <li>Injection</li>
          
          <li>OpenSource</li>
          
          <li>Security</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/github-actions-untrusted-input/">Keeping your GitHub Actions and workflows secure: Untrusted input</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          In this article, we'll discuss possible avenues of abuse that may result in code and command injection in otherwise seemingly secure workflows. Our examples are based on real-world GitHub workflow implementation vulnerabilities the GitHub Security Lab has reported to maintainers.
        </p>

        
        
        
        
        


        <a href="https://github.com/jarlob" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/26652396?s=35" height="35" width="35" /><span>Jaroslav Lobacevski</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/one-year-of-security-lab/"><span>December 18, 2020</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>securitylab</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/one-year-of-security-lab/">Security Lab research: a year in review</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          The GitHub Security Lab is celebrating its very first birthday! In this post we will highlight some of our inaugural research findings and initiatives as we gear up for the 2021 bug hunting season.
        </p>

        
        
        
        
        


        <a href="https://github.com/ghsecuritylab" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/61799930?s=35" height="35" width="35" /><span>GitHub Security Lab</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/anniversary-community-building/"><span>December 18, 2020</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>Bounties</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/anniversary-community-building/">Increased bounty rewards for the GitHub Security Lab community!</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          In this post we look back on one year of building a home for the security research' community on GitHub, and announce exciting milestones and next steps for our bounty program
        </p>

        
        
        
        
        


        <a href="https://github.com/ghsecuritylab" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/61799930?s=35" height="35" width="35" /><span>GitHub Security Lab</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/github-actions-preventing-pwn-requests/"><span>December 15, 2020</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>Actions</li>
          
          <li>OpenSource</li>
          
          <li>pull_request_target</li>
          
          <li>Security</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/github-actions-preventing-pwn-requests/">Keeping your GitHub Actions and workflows secure: Preventing pwn requests</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          In this article, we'll discuss some common security malpractices for GitHub Actions and workflows, and how to best avoid them. Our examples are based on real-world GitHub workflow implementation vulnerabilities the GitHub Security Lab has reported to maintainers.
        </p>

        
        
        
        
        


        <a href="https://github.com/jarlob" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/26652396?s=35" height="35" width="35" /><span>Jaroslav Lobacevski</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/now-you-c-me-part-two/"><span>December 7, 2020</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>C</li>
          
          <li>Javascript</li>
          
          <li>exploit</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/now-you-c-me-part-two/">Now you C me, now you don't, part two: exploiting the in-between</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          Aimed at developers, in this series we introduce and explore the memory unsafe attack surface of interpreted languages.
        </p>

        
        
        
        
        


        <a href="https://github.com/anticomputer" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/13686387?s=35" height="35" width="35" /><span>Bas Alberts</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/securing-the-fight-against-covid19-through-oss/"><span>November 19, 2020</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>CodeQL</li>
          
          <li>Security</li>
          
          <li>Java</li>
          
          <li>BeanValidation</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/securing-the-fight-against-covid19-through-oss/">Securing the fight against COVID-19 through open source</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          This blog describes a security vulnerability in the infrastructure that supports Germany’s COVID-19 contact tracing efforts. The mobile (Android/iOS) apps are not affected by the vulnerability and do not collect and/or transmit any personal data other than the device’s IP address. The infrastructure takes active measures to disassociate true positives from client IP addresses.
        </p>

        
        
        
        
        


        <a href="https://github.com/pwntester" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/125701?s=35" height="35" width="35" /><span>Alvaro Munoz</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/Ubuntu-gdm3-accountsservice-LPE/"><span>November 10, 2020</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>CVE</li>
          
          <li>Security</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/Ubuntu-gdm3-accountsservice-LPE/">How to get root on Ubuntu 20.04 by pretending nobody’s /home</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          Ubuntu 20.04 local privilege escalation using vulnerabilities in gdm3 and accountsservice (CVE-2020-16125, CVE-2020-16126, CVE-2020-16127)
        </p>

        
        
        
        
        


        <a href="https://github.com/kevinbackhouse" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/4358136?s=35" height="35" width="35" /><span>Kevin Backhouse</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/CVE-2020-6449-exploit-chrome-uaf/"><span>October 27, 2020</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>Chrome</li>
          
          <li>Security</li>
          
          <li>Exploit</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/CVE-2020-6449-exploit-chrome-uaf/">Exploiting a textbook use-after-free in Chrome</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          In this post I'll give details about how to exploit CVE-2020-6449, a use-after-free (UAF) in the WebAudio module of Chrome that I discovered in March 2020. I'll give an outline of the general strategy to exploit this type of UAF to achieve a sandboxed RCE in Chrome by a single click (and perhaps a 2 minute wait) on a malicious website.
        </p>

        
        
        
        
        


        <a href="https://github.com/m-y-mo" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/15773368?s=35" height="35" width="35" /><span>Man Yue Mo</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/ekoparty-ctf/"><span>October 20, 2020</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>CTF</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/ekoparty-ctf/">Hack this repository: The EkoParty 2020 GitHub CTF challenges</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          In this post we recap the intended solutions for the GitHub levels of the EkoParty 2020 main CTF.
        </p>

        
        
        
        
        


        <a href="https://github.com/anticomputer" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/13686387?s=35" height="35" width="35" /><span>Bas Alberts</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/the-gray-area-of-security/"><span>September 23, 2020</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>CVE</li>
          
          <li>ACL</li>
          
          <li>DLL planting</li>
          
          <li>Security</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/the-gray-area-of-security/">The Grey area of software security - whose responsibility is it?</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          Security is a complex area. One software component may break the assumptions made by another component and it is not always clear who should fix the code to remediate the security implications.
        </p>

        
        
        
        
        


        <a href="https://github.com/jarlob" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/26652396?s=35" height="35" width="35" /><span>Jaroslav Lobacevski</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/the-weakest-link/"><span>September 10, 2020</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>C</li>
          
          <li>Ruby</li>
          
          <li>eventmachine</li>
          
          <li>TLS</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/the-weakest-link/">The weakest link</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          In this post we will talk about how we identified an important design detail in a C library called eventmachine and how it undermined the security of several ruby packages.
        </p>

        
        
        
        
        


        <a href="https://github.com/agustingianni" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/102623?s=35" height="35" width="35" /><span>Agustin Gianni</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/now-you-c-me/"><span>August 27, 2020</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>C</li>
          
          <li>Javascript</li>
          
          <li>Python</li>
          
          <li>Perl</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/now-you-c-me/">Now you C me, now you don't: An introduction to the hidden attack surface of interpreted languages</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          Aimed at developers, in this series we introduce and explore the memory unsafe attack surface of interpreted languages.
        </p>

        
        
        
        
        


        <a href="https://github.com/anticomputer" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/13686387?s=35" height="35" width="35" /><span>Bas Alberts</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/fuzzing-sockets-FreeRDP/"><span>August 11, 2020</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>Fuzzing</li>
          
          <li>FreeRDP</li>
          
          <li>AFL</li>
          
          <li>CVE</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/fuzzing-sockets-FreeRDP/">Fuzzing sockets, part 2: FreeRDP</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          In this second installment, I’ll delve into the research conducted on FreeRDP (http://www.freerdp.com/). 
        </p>

        
        
        
        
        


        <a href="https://github.com/antonio-morales" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/55253029?s=35" height="35" width="35" /><span>Antonio Morales</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/template-security-ssti/"><span>August 6, 2020</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>SSTI</li>
          
          <li>CVE</li>
          
          <li>RCE</li>
          
          <li>Security</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/template-security-ssti/">Room for Escape: Scribbling Outside the Lines of Template Security</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          in this Q&A with Alvaro Muñoz, dive in a recent research that uncovered more than 30 CVEs across 20 different CMS.
        </p>

        
        
        
        
        


        <a href="https://github.com/ghsecuritylab" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/61799930?s=35" height="35" width="35" /><span>GitHub Security Lab</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/fuzzing-software-2/"><span>July 28, 2020</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>Fuzzing</li>
          
          <li>C/C++</li>
          
          <li>AFL</li>
          
          <li>AFL++</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/fuzzing-software-2/">Fuzzing software: advanced tricks (Part 2)</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          In this second part of a two-part series about common challenges you usually face in your fuzzing work, we'll visit some advanced fuzzing tricks.
        </p>

        
        
        
        
        


        <a href="https://github.com/antonio-morales" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/55253029?s=35" height="35" width="35" /><span>Antonio Morales</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/fuzzing_android_nfc/"><span>July 14, 2020</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>Android</li>
          
          <li>Security</li>
          
          <li>Fuzzing</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/fuzzing_android_nfc/">Structured fuzzing Android's NFC</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          In this post I'll give some details of how to use libprotobuf-mutator on Android to fuzz the NFC component.
        </p>

        
        
        
        
        


        <a href="https://github.com/m-y-mo" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/15773368?s=35" height="35" width="35" /><span>Man Yue Mo</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/bean-validation-RCE/"><span>July 7, 2020</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>Java</li>
          
          <li>Bean Validation</li>
          
          <li>Expression Language</li>
          
          <li>Security</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/bean-validation-RCE/">Bean Stalking: Growing Java beans into RCE</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          In this post I'll show how input validation which should be used to prevent malformed inputs to enter our applications, open up the doors to Remote Code Execution (RCE).
        </p>

        
        
        
        
        


        <a href="https://github.com/pwntester" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/125701?s=35" height="35" width="35" /><span>Alvaro Munoz</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/chrome_task_queue_uaf/"><span>June 23, 2020</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>Chrome</li>
          
          <li>Security</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/chrome_task_queue_uaf/">Variant analysis of Web Audio callback vulnerabilities in Chrome</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          In this post I'll look at some use-after-free vulnerabilities in Chrome which were the result of object lifetime misassumptions based on objects being kept alive unexpectedly in audio callbacks.
        </p>

        
        
        
        
        


        <a href="https://github.com/m-y-mo" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/15773368?s=35" height="35" width="35" /><span>Man Yue Mo</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/last-orders-at-the-house-of-force/"><span>June 18, 2020</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>CVE</li>
          
          <li>Security</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/last-orders-at-the-house-of-force/">Last orders at the House of Force</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          A glibc heap exploitation tutorial, using a heap buffer overflow in SANE Backends as an example.
        </p>

        
        
        
        
        


        <a href="https://github.com/kevinbackhouse" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/4358136?s=35" height="35" width="35" /><span>Kevin Backhouse</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/octopus-scanner-malware-open-source-supply-chain/"><span>May 28, 2020</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>Java</li>
          
          <li>Malware</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/octopus-scanner-malware-open-source-supply-chain/">The Octopus Scanner Malware: Attacking the open source supply chain</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          This post details how an open source supply chain malware spread through build artifacts. 26 open source projects were backdoored by this malware and were actively serving backdoored code.
        </p>

        
        
        
        
        


        <a href="https://github.com/pwntester" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/125701?s=35" height="35" width="35" /><span>Alvaro Munoz</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/network-integers-are-hot-lava/"><span>May 12, 2020</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>C</li>
          
          <li>CodeQL</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/network-integers-are-hot-lava/">Hot lava: A case study in hunting for network integer arithmetic flaws</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          We examine the dangers of network integer arithmetic based on a case study of flaws reported to the ntop project.
        </p>

        
        
        
        
        


        <a href="https://github.com/anticomputer" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/13686387?s=35" height="35" width="35" /><span>Bas Alberts</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/garbage-collection-uaf-chrome_gc/"><span>April 28, 2020</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>Chrome</li>
          
          <li>Security</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/garbage-collection-uaf-chrome_gc/">Triggering garbage collection with rejected promises to cause use-after-free in Chrome</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          In this post I'll show how garbage collections (GC) in Chrome may be triggered with small memory allocations in unexpected places, which was then used to cause a use-after-free bug.
        </p>

        
        
        
        
        


        <a href="https://github.com/m-y-mo" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/15773368?s=35" height="35" width="35" /><span>Man Yue Mo</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/fuzzing-sockets-FTP/"><span>April 14, 2020</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>Fuzzing</li>
          
          <li>FTP</li>
          
          <li>CVE</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/fuzzing-sockets-FTP/">Fuzzing sockets, part 1: FTP servers</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          Antonio shares his research on socket-based fuzzing, starting with the audit of three widely-used FTP servers. With details on interesting CVEs found along the way.
        </p>

        
        
        
        
        


        <a href="https://github.com/antonio-morales" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/55253029?s=35" height="35" width="35" /><span>Antonio Morales</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/cryptography-first-steps-encryption/"><span>April 2, 2020</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>C</li>
          
          <li>Cryptography</li>
          
          <li>Encryption</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/cryptography-first-steps-encryption/">Hey look ma, I'm doing crypto!</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          In this first part of a series about cryptography, Agustin explores identity validation issues in TLS.
        </p>

        
        
        
        
        


        <a href="https://github.com/agustingianni" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/102623?s=35" height="35" width="35" /><span>Agustin Gianni</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/CERT-CVE-2020-8597-automated-remediation-scale/"><span>March 18, 2020</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>CVE</li>
          
          <li>cpp</li>
          
          <li>java</li>
          
          <li>CERT</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/CERT-CVE-2020-8597-automated-remediation-scale/">CERT partners with GitHub Security Lab for automated remediation of CVE-2020-8597</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          Learn more about how we found ways to scale our vulnerability hunting efforts and empower others to do the same. In this post, we’ll take a deep-dive in remediation of CVE-2020-8597 with CERT.
        </p>

        
        
        
        
        


        <a href="https://github.com/nicowaisman" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/17729105?s=35" height="35" width="35" /><span>Nico Waisman</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/exchange-rce-CVE-2020-0688/"><span>March 4, 2020</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>CVE</li>
          
          <li>Security</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/exchange-rce-CVE-2020-0688/">CVE-2020-0688 Losing the keys to your kingdom</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          Learn about how reusing hardcoded HMAC keys led to remote code execution on Exchange servers.
        </p>

        
        
        
        
        


        <a href="https://github.com/pwntester" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/125701?s=35" height="35" width="35" /><span>Alvaro Munoz</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/rfd-spring-mvc-CVE-2020-5398/"><span>February 25, 2020</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>CVE</li>
          
          <li>Security</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/rfd-spring-mvc-CVE-2020-5398/">CVE-2020-5398 Reflected File Download in Spring MVC/WebFlux</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          Learn about Reflected File Downloads by reviewing how Spring MVC and WebFlux were affected.
        </p>

        
        
        
        
        


        <a href="https://github.com/pwntester" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/125701?s=35" height="35" width="35" /><span>Alvaro Munoz</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/how-to-escape-from-the-fuzz/"><span>February 20, 2020</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>Fuzzing</li>
          
          <li>Security</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/how-to-escape-from-the-fuzz/">How to escape from the fuzz</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          The story of how I became an Exiv2 contributor last year, and joined the struggle to escape from the fuzzing police.
        </p>

        
        
        
        
        


        <a href="https://github.com/kevinbackhouse" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/4358136?s=35" height="35" width="35" /><span>Kevin Backhouse</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/gchq-stroom-xss/"><span>February 18, 2020</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>CVE</li>
          
          <li>Javascript</li>
          
          <li>XSS</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/gchq-stroom-xss/">CVE-2019-10779: Cross-site scripting in GCHQ Stroom</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          GCHQ Stroom is vulnerable to Cross-Site Scripting due to the ability to load the Stroom dashboard on another site and insufficient protection against window event origins.
        </p>

        
        
        
        
        


        <a href="https://github.com/JLLeitschuh" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/1323708?s=35" height="35" width="35" /><span>Jonathan Leitschuh</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/fuzzing-challenges-solutions-1/"><span>January 28, 2020</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>Fuzzing</li>
          
          <li>C/C++</li>
          
          <li>AFL</li>
          
          <li>AFL++</li>
          
          <li>VLC</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/fuzzing-challenges-solutions-1/">Fuzzing software: common challenges and potential solutions (Part 1) </a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          This is the first part of a two-part series about common challenges you usually face in your fuzzing work.
        </p>

        
        
        
        
        


        <a href="https://github.com/antonio-morales" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/55253029?s=35" height="35" width="35" /><span>Antonio Morales</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/chromium-ipc-vulnerabilities/"><span>January 15, 2020</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>CodeQL</li>
          
          <li>Security</li>
          
          <li>C++</li>
          
          <li>Chromium</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/chromium-ipc-vulnerabilities/">Review of Chromium IPC vulnerabilities</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          In this post I’ll discuss some recent Chromium IPC vulnerabilities discovered by the security research community and how analyzing them helped me to discover new ones.
        </p>

        
        
        
        
        


        <a href="https://github.com/m-y-mo" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/15773368?s=35" height="35" width="35" /><span>Man Yue Mo</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/ubuntu-whoopsie-CVE-2019-11484/"><span>December 23, 2019</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>CVE</li>
          
          <li>C/C++</li>
          
          <li>Security</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/ubuntu-whoopsie-CVE-2019-11484/">Ubuntu whoopsie integer overflow vulnerability (CVE-2019-11484)</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          This is the fourth and final post in a series about Ubuntu's crash reporting system. We'll review CVE-2019-11484, a vulnerability in whoopsie which enables a local attacker to get a shell as the whoopsie user, thereby gaining the ability to read any crash report.
        </p>

        
        
        
        
        


        <a href="https://github.com/kevinbackhouse" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/4358136?s=35" height="35" width="35" /><span>Kevin Backhouse</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/ubuntu-apport-CVE-2019-15790/"><span>December 19, 2019</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>CVE</li>
          
          <li>Python</li>
          
          <li>Security</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/ubuntu-apport-CVE-2019-15790/">Ubuntu apport PID recycling vulnerability (CVE-2019-15790)</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          This is the third post in a series about Ubuntu's crash reporting system. We'll review CVE-2019-15790, a vulnerability in apport that enables a local attacker to obtain the ASLR offsets for any process they can start (or restart).
        </p>

        
        
        
        
        


        <a href="https://github.com/kevinbackhouse" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/4358136?s=35" height="35" width="35" /><span>Kevin Backhouse</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/ubuntu-apport-CVE-2019-7307/"><span>December 17, 2019</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>CVE</li>
          
          <li>Python</li>
          
          <li>Security</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/ubuntu-apport-CVE-2019-7307/">Ubuntu apport TOCTOU vulnerability (CVE-2019-7307)</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          This is the second post in our series about Ubuntu's crash reporting system. We'll review CVE-2019-7307, a TOCTOU vulnerability that enables a local attacker to include the contents of any file on the system in a crash report.
        </p>

        
        
        
        
        


        <a href="https://github.com/kevinbackhouse" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/4358136?s=35" height="35" width="35" /><span>Kevin Backhouse</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/ubuntu-whoopsie-daisy-overview/"><span>December 12, 2019</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>CVE</li>
          
          <li>Security</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/ubuntu-whoopsie-daisy-overview/">Whoopsie-daisy: Chaining accidental features of Ubuntu’s crash reporter to get LPE</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          
        </p>

        
        
        
        
        


        <a href="https://github.com/kevinbackhouse" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/4358136?s=35" height="35" width="35" /><span>Kevin Backhouse</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/bug-hunting-codeql-rsyslog/"><span>November 14, 2019</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>Security</li>
          
          <li>CVE</li>
          
          <li>C/C++</li>
          
          <li>CodeQL</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/bug-hunting-codeql-rsyslog/">Bug Hunting with CodeQL, an Rsyslog Case Study</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          Follow GitHub security researcher Agustin Gianni in his bug hunting process, from threat modeling to variant analysis.
        </p>

        
        
        
        
        


        <a href="https://github.com/agustingianni" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/102623?s=35" height="35" width="35" /><span>Agustin Gianni</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/anatomy-of-a-coffee-bean-wireless-vulnerabilities-in-linux-kernel/"><span>November 14, 2019</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>Security</li>
          
          <li>CVE</li>
          
          <li>C/C++</li>
          
          <li>CodeQL</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/anatomy-of-a-coffee-bean-wireless-vulnerabilities-in-linux-kernel/">Anatomy of a Coffee Bean (Wireless Vulnerabilities in Linux Kernel)</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          Learn how I found wireless vulnerabilities in the Linux Kernel, and variants, thanks to CodeQL.
        </p>

        
        
        
        
        


        <a href="https://github.com/nicowaisman" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/17729105?s=35" height="35" width="35" /><span>Nico Waisman</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/libssh2-integer-overflow-CVE-2019-17498/"><span>October 16, 2019</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>CodeQL</li>
          
          <li>C/C++</li>
          
          <li>Variant Analysis</li>
          
          <li>CVE</li>
          
          <li>Severity</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/libssh2-integer-overflow-CVE-2019-17498/">Another libssh2 integer overflow (CVE-2019-17498)</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          GitHub security researcher Kevin Backhouse describes a new integer overflow vulnerability in libssh2 and explains the benefits of using variant analysis with QL when reporting a vulnerability.
        </p>

        
        
        
        
        


        <a href="https://github.com/kevinbackhouse" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/4358136?s=35" height="35" width="35" /><span>Kevin Backhouse</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/in-memory-data-grid-vulnerabilities/"><span>September 5, 2019</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>Security</li>
          
          <li>CVE</li>
          
          <li>Java</li>
          
          <li>CodeQL</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/in-memory-data-grid-vulnerabilities/">In-Memory Data Grid Applications: Finding Common Java Deserialization Vulnerabilities with CodeQL</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          In-memory data grid applications often make heavy use of serialization to transfer data. Our security researchers look at Java deserialization vulnerabilities in Apache Geode, Red Hat Infinispan, Ignite, and Hazelcast.
        </p>

        
        
        
        
        


        <a href="https://github.com/m-y-mo" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/15773368?s=35" height="35" width="35" /><span>Man Yue Mo</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/vlc-vulnerability-heap-overflow/"><span>August 19, 2019</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>Announcement</li>
          
          <li>CVE</li>
          
          <li>C/C++</li>
          
          <li>Security</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/vlc-vulnerability-heap-overflow/">VLC Vulnerabilities Discovered by the GitHub Security Research Team</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          GitHub Security Lab’s research team discovers 11 bugs in VLC, the popular media player. The VLC vulnerability CVE-2019-14438 could potentially allow an attacker to take control of the user’s computer.
        </p>

        
        
        
        
        


        <a href="https://github.com/antonio-morales" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/55253029?s=35" height="35" width="35" /><span>Antonio Morales</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/uboot-rce-nfs-vulnerability/"><span>July 24, 2019</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>CVE</li>
          
          <li>C/C++</li>
          
          <li>CodeQL</li>
          
          <li>RCE</li>
          
          <li>Security</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/uboot-rce-nfs-vulnerability/">U-Boot NFS RCE Vulnerabilities (CVE-2019-14192)</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          Semmle’s security research team discovers 13 U-Boot RCE vulnerabilities in its bootloader, which is commonly used by IoT, Kindle, and ARM ChromeOS devices.
        </p>

        
        
        
        
        


        <a href="https://github.com/fjserna" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/8508934?s=35" height="35" width="35" /><span>Fermin J. Serna</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/libssh2-integer-overflow/"><span>July 8, 2019</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>CodeQL</li>
          
          <li>C/C++</li>
          
          <li>Variant Analysis</li>
          
          <li>CVE</li>
          
          <li>Security</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/libssh2-integer-overflow/">libssh2 integer overflows and an out-of-bounds read (CVE-2019-13115)</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          Get a technical deep dive into some libssh2 integer overflows and an out-of-bounds read. GitHub security researcher Kevin Backhouse shows how the vulnerability can be triggered by connecting to a malicious ssh server.
        </p>

        
        
        
        
        


        <a href="https://github.com/kevinbackhouse" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/4358136?s=35" height="35" width="35" /><span>Kevin Backhouse</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/insecure-deserialization/"><span>July 2, 2019</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>Insights</li>
          
          <li>CodeQL</li>
          
          <li>Security</li>
          
          <li>Java</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/insecure-deserialization/">Insecure Deserialization: Finding Java Vulnerabilities with CodeQL</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          Deserialization of untrusted data can lead to vulnerabilities that allow an attacker to execute arbitrary code. We can use CodeQL, the code query technology of LGTM, to find such deserialization vulnerabilities.
        </p>

        
        
        
        
        


        <a href="https://github.com/aschackmull" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/28296824?s=35" height="35" width="35" /><span>Anders Schack-Mulligen</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/facebook-fizz-CVE-2019-3560/"><span>March 19, 2019</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>Security</li>
          
          <li>Facebook</li>
          
          <li>CVE</li>
          
          <li>C/C++</li>
          
          <li>CodeQL</li>
          
          <li>DOS</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/facebook-fizz-CVE-2019-3560/">Facebook Fizz integer overflow vulnerability (CVE-2019-3560)</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          An unauthenticated remote attacker could trigger an infinite loop in Fizz, Facebook's open source TLS library.
        </p>

        
        
        
        
        


        <a href="https://github.com/kevinbackhouse" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/4358136?s=35" height="35" width="35" /><span>Kevin Backhouse</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/cve-2018-19134-ghostscript-rce/"><span>February 5, 2019</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>Security</li>
          
          <li>Ghostscript</li>
          
          <li>CVE</li>
          
          <li>C/C++</li>
          
          <li>RCE</li>
          
          <li>CodeQL</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/cve-2018-19134-ghostscript-rce/">Exploiting CVE-2018-19134: Ghostscript RCE through type confusion</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          This post describes how I used variant analysis to develop an exploit for Ghostscript CVE-2018-19134, a type confusion vulnerability that allows arbitrary shell command execution.
        </p>

        
        
        
        
        


        <a href="https://github.com/m-y-mo" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/15773368?s=35" height="35" width="35" /><span>Man Yue Mo</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/ghostscript-type-confusion/"><span>January 22, 2019</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>CodeQL</li>
          
          <li>CVE</li>
          
          <li>Security</li>
          
          <li>Ghostscript</li>
          
          <li>C/C++</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/ghostscript-type-confusion/">Ghostscript type confusion: Using variant analysis to find vulnerabilities</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          This post describes how to perform variant analysis with CodeQL to catch missing type checking in Ghostscript, leading to the discovery of 3 new type confusion vulnerabilities (CVE-2018-19134, CVE-2018-19476, CVE-2018-19477)
        </p>

        
        
        
        
        


        <a href="https://github.com/m-y-mo" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/15773368?s=35" height="35" width="35" /><span>Man Yue Mo</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/ghostscript-CVE-2018-19475/"><span>January 14, 2019</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>Security</li>
          
          <li>Ghostscript</li>
          
          <li>CVE</li>
          
          <li>C/C++</li>
          
          <li>RCE</li>
          
          <li>CodeQL</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/ghostscript-CVE-2018-19475/">CVE-2018-19475: Ghostscript shell command execution in SAFER mode</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          This post describes how I carried out variant analysis on a vulnerability found by Google Project Zero member Tavis Ormandy and ended up with a new one.
        </p>

        
        
        
        
        


        <a href="https://github.com/m-y-mo" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/15773368?s=35" height="35" width="35" /><span>Man Yue Mo</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/apple-xnu-exploit-icmp-poc/"><span>November 24, 2018</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>Security</li>
          
          <li>Apple</li>
          
          <li>CVE</li>
          
          <li>C/C++</li>
          
          <li>CodeQL</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/apple-xnu-exploit-icmp-poc/">Apple XNU exploits: ICMP proof of concept</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          A few weeks ago, we disclosed 6 vulnerabilities in Apple's XNU operating system kernel. This post gives the details of our proof-of-concept exploits. It also explains how a query helped us find a path to the vulnerable code.
        </p>

        
        
        
        
        


        <a href="https://github.com/kevinbackhouse" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/4358136?s=35" height="35" width="35" /><span>Kevin Backhouse</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/ognl-apache-struts-exploit-CVE-2018-11776/"><span>November 21, 2018</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>Security</li>
          
          <li>CVE</li>
          
          <li>Java</li>
          
          <li>RCE</li>
          
          <li>Struts</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/ognl-apache-struts-exploit-CVE-2018-11776/">OGNL Apache Struts exploit: Weaponizing a sandbox bypass (CVE-2018-11776)</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          This post reviews various security measures that were implemented in Apache Struts to constrain the power of OGNL, and how to bypass them (up to version 2.5.16).
        </p>

        
        
        
        
        


        <a href="https://github.com/m-y-mo" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/15773368?s=35" height="35" width="35" /><span>Man Yue Mo</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/cve-2018-18820-snprintf-vulnerability-icecast/"><span>November 1, 2018</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>Security</li>
          
          <li>CVE</li>
          
          <li>C/C++</li>
          
          <li>LGTM</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/cve-2018-18820-snprintf-vulnerability-icecast/">CVE-2018-18820: Snprintf Vulnerability in Icecast</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          Our automated analysis found a remote code execution vulnerability in the Icecast streaming media server.
        </p>

        
        
        
        
        


        <a href="https://github.com/nickrolfe" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/158306?s=35" height="35" width="35" /><span>Nick Rolfe</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/cve-2018-4259-macos-nfs-vulnerability/"><span>October 30, 2018</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>Security</li>
          
          <li>Apple</li>
          
          <li>CVE</li>
          
          <li>CodeQL</li>
          
          <li>C/C++</li>
          
          <li>RCE</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/cve-2018-4259-macos-nfs-vulnerability/">CVE-2018-4259: MacOS NFS vulnerabilties lead to kernel RCE</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          A custom query, written for Apple's macOS operating system kernel, has found multiple stack and heap buffer overflows which are triggerable by connecting to a malicious NFS file server.
        </p>

        
        
        
        
        


        <a href="https://github.com/kevinbackhouse" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/4358136?s=35" height="35" width="35" /><span>Kevin Backhouse</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/apple-xnu-icmp-error-CVE-2018-4407/"><span>October 30, 2018</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>Security</li>
          
          <li>CVE</li>
          
          <li>Apple</li>
          
          <li>CodeQL</li>
          
          <li>C/C++</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/apple-xnu-icmp-error-CVE-2018-4407/">Kernel crash caused by out-of-bounds write in Apple's ICMP packet-handling code (CVE-2018-4407)</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          The networking implementation in iOS and macOS contained an out-of-bounds write, which could be triggered by sending a malicious packet to the device. No user interaction was required. This post explains how it was found using CodeQL.
        </p>

        
        
        
        
        


        <a href="https://github.com/kevinbackhouse" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/4358136?s=35" height="35" width="35" /><span>Kevin Backhouse</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/apache-struts-double-evaluation/"><span>October 4, 2018</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>Security</li>
          
          <li>CVE</li>
          
          <li>Java</li>
          
          <li>CodeQL</li>
          
          <li>RCE</li>
          
          <li>Struts</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/apache-struts-double-evaluation/">Apache Struts double evaluation RCE lottery</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          This post takes a look at a type of RCE vulnerability in Apache Struts known as a double evaluation and explains how to find it using CodeQL.
        </p>

        
        
        
        
        


        <a href="https://github.com/m-y-mo" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/15773368?s=35" height="35" width="35" /><span>Man Yue Mo</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/ognl-injection-apache-struts/"><span>September 24, 2018</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>Security</li>
          
          <li>CVE</li>
          
          <li>Java</li>
          
          <li>CodeQL</li>
          
          <li>RCE</li>
          
          <li>Struts</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/ognl-injection-apache-struts/">OGNL injection in Apache Struts: Discovering exploits with taint tracking</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          This post gives more technical detail about general taint-tracking analysis in Apache Struts. It also provides more information on how to write queries that take the architecture of Struts into account to discover various OGNL injection issues.
        </p>

        
        
        
        
        


        <a href="https://github.com/m-y-mo" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/15773368?s=35" height="35" width="35" /><span>Man Yue Mo</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/apache-struts-CVE-2018-11776/"><span>August 22, 2018</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>CodeQL</li>
          
          <li>Struts</li>
          
          <li>Security</li>
          
          <li>Java</li>
          
          <li>RCE</li>
          
          <li>CVE</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/apache-struts-CVE-2018-11776/">CVE-2018-11776: How to find 5 RCEs in Apache Struts with CodeQL</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          Semmle security researcher Man Yue Mo explains how he used CodeQL's Data Flow library to discover multiple RCE vulnerabilities (CVE-2018-11776) in Apache Struts.
        </p>

        
        
        
        
        


        <a href="https://github.com/m-y-mo" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/15773368?s=35" height="35" width="35" /><span>Man Yue Mo</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/librelp-buffer-overflow-cve-2018-1000140/"><span>June 19, 2018</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>Security</li>
          
          <li>CVE</li>
          
          <li>C/C++</li>
          
          <li>CodeQL</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/librelp-buffer-overflow-cve-2018-1000140/">Librelp buffer overflow fix (cve-2018-1000140) - a collaboration between Adiscon and Semmle</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          This is a joint blog post, from Adiscon and Semmle, about the finding and fixing of CVE-2018-1000140, a security vulnerability in librelp.
        </p>

        
        
        
        
        


        <a href="https://github.com/kevinbackhouse" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/4358136?s=35" height="35" width="35" /><span>Kevin Backhouse</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/CVE-2018-4249-apple-xnu-packet-mangler/"><span>June 1, 2018</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>Security</li>
          
          <li>CVE</li>
          
          <li>CodeQL</li>
          
          <li>Apple</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/CVE-2018-4249-apple-xnu-packet-mangler/">CVE-2018-4249 & CVE-2017-13904: Remote code execution in Apple's packet mangler</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          The packet-mangler component of Apple's macOS operating system kernel contained a remote code execution vulnerability which could be triggered by sending a malicious network packet to the Mac over the internet. This post explains how it we found it using CodeQL.
        </p>

        
        
        
        
        


        <a href="https://github.com/kevinbackhouse" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/4358136?s=35" height="35" width="35" /><span>Kevin Backhouse</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/apple-xnu-nfs-boot/"><span>April 26, 2018</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>Security</li>
          
          <li>CVE</li>
          
          <li>CodeQL</li>
          
          <li>C/C++</li>
          
          <li>Apple</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/apple-xnu-nfs-boot/">Apple NFS Diskless Boot: Negative integer overflow vulnerabilities (CVE-2018-4136 & CVE-2018-4160)</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          TThis post explains how to use CodeQL to find calls to bcopy where the size argument might be negative.
        </p>

        
        
        
        
        


        <a href="https://github.com/kevinbackhouse" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/4358136?s=35" height="35" width="35" /><span>Kevin Backhouse</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/etherpad-reflected-file-download/"><span>March 29, 2018</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>Security</li>
          
          <li>CVE</li>
          
          <li>JavaScript</li>
          
          <li>CodeQL</li>
          
          <li>RFD</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/etherpad-reflected-file-download/">Etherpad reflected file download: Vulnerability hunting with CodeQL (CVE-2018-6835)</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          This blog post explains how CodeQL can be used to discover so-called 'Reflected File Download' vulnerabilities in JavaScript applications. As an example, we look at CVE-2018-6835 which we recently found in the Etherpad collaborative editor.
        </p>

        
        
        
        
        


        <a href="https://github.com/m-y-mo" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/15773368?s=35" height="35" width="35" /><span>Man Yue Mo</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/spring-data-rest-CVE-2017-8046-ql/"><span>March 1, 2018</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>Security</li>
          
          <li>CVE</li>
          
          <li>Java</li>
          
          <li>CodeQL</li>
          
          <li>RCE</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/spring-data-rest-CVE-2017-8046-ql/">Spring Data REST exploit (CVE-2017-8046): Finding a RCE vulnerability with CodeQL</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          The query language that forms the foundation of LGTM's code analysis makes it very easy to find new security vulnerabilities and variants of it. In this post we look at Spring Data REST, and how CodeQL helped making sure a remote code execution vulnerability was truly eradicated.
        </p>

        
        
        
        
        


        <a href="https://github.com/m-y-mo" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/15773368?s=35" height="35" width="35" /><span>Man Yue Mo</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/android-deserialization-vulnerabilities/"><span>February 2, 2018</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>Security</li>
          
          <li>Android</li>
          
          <li>Java</li>
          
          <li>CodeQL</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/android-deserialization-vulnerabilities/">Android Deserialization Vulnerabilities: A Brief history</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          This post describes some past Android deserialization vulnerabilities that exploited C++ pointers wrapped inside Java objects. Using a single query, we can find the classes responsible for them with great precision.
        </p>

        
        
        
        
        


        <a href="https://github.com/m-y-mo" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/15773368?s=35" height="35" width="35" /><span>Man Yue Mo</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/stack-buffer-overflow-qualcomm-msm/"><span>January 24, 2018</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>C/C++</li>
          
          <li>Android</li>
          
          <li>CodeQL</li>
          
          <li>Insights</li>
          
          <li>Security</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/stack-buffer-overflow-qualcomm-msm/">Stack buffer overflow in Qualcomm MSM 4.4 - Finding bugs with CodeQL</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          This post describes how we can use CodeQL to find unsafe uses of copy_from_user - a C function that is used to copy data from user memory into kernel memory. When used incorrectly, it could cause a stack buffer overflow in the kernel.
        </p>

        
        
        
        
        


        <a href="https://github.com/kevinbackhouse" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/4358136?s=35" height="35" width="35" /><span>Kevin Backhouse</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/hessian-java-deserialization-castor-vulnerabilities/"><span>January 17, 2018</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>Security</li>
          
          <li>CVE</li>
          
          <li>CodeQL</li>
          
          <li>Java</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/hessian-java-deserialization-castor-vulnerabilities/">Castor and Hessian java deserialization vulnerabilities</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          This post shows how to use the new TaintTracking library to easily identify unsafe deserialization vulnerabilities associated with the Castor and Hessian deserialization framework. In particular, two new vulnerabilities, CVE-2017-12633 and CVE-2017-12634 are discovered in Apache Camel.
        </p>

        
        
        
        
        


        <a href="https://github.com/m-y-mo" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/15773368?s=35" height="35" width="35" /><span>Man Yue Mo</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/xxe-attack-jboss-vulnerability/"><span>December 19, 2017</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>Security</li>
          
          <li>CVE</li>
          
          <li>XXE</li>
          
          <li>CodeQL</li>
          
          <li>Java</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/xxe-attack-jboss-vulnerability/">XXE attack example using jBoss vulnerability (jBPM) CVE-2017-7545</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          This post shows how the out-of-the-box XXE query in LGTM catches an exploitable XXE vulnerability in the JBoss business process manager that is difficult to find using fuzzing or testing.
        </p>

        
        
        
        
        


        <a href="https://github.com/m-y-mo" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/15773368?s=35" height="35" width="35" /><span>Man Yue Mo</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/apple-xnu-dtrace-CVE-2017-13782/"><span>November 1, 2017</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>Security</li>
          
          <li>CVE</li>
          
          <li>Apple</li>
          
          <li>CodeQL</li>
          
          <li>C/C++</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/apple-xnu-dtrace-CVE-2017-13782/">Apple's XNU Kernel: Finding a memory exposure vulnerability with CodeQL (CVE-2017-13782)</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          Apple's macOS XNU kernel can be tricked into leaking sensitive kernel memory. This post describes how we can use CodeQL to find such vulnerabilities in C code.
        </p>

        
        
        
        
        


        <a href="https://github.com/kevinbackhouse" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/4358136?s=35" height="35" width="35" /><span>Kevin Backhouse</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/restlet_xxe_vulnerability_CVE-2017-14949/"><span>October 17, 2017</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>Security</li>
          
          <li>CVE</li>
          
          <li>CodeQL</li>
          
          <li>Insights</li>
          
          <li>XXE</li>
          
          <li>Java</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/restlet_xxe_vulnerability_CVE-2017-14949/">Restlet XXE vulnerability (CVE-2017-14949)</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          Unsafe parsing of user input XML data in Restlet leads to remote information disclosure by sending a malicious request to applications built using Restlet's REST API. In this post I will explain the details of the vulnerability, how it is found using CodeQL and why this type of mistake is easy to make when configuring XML parsers.
        </p>

        
        
        
        
        


        <a href="https://github.com/m-y-mo" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/15773368?s=35" height="35" width="35" /><span>Man Yue Mo</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/swagger-yaml-parser-vulnerability/"><span>October 11, 2017</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>CodeQL</li>
          
          <li>Java</li>
          
          <li>Security</li>
          
          <li>CVE</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/swagger-yaml-parser-vulnerability/">Swagger YAML Parser Vulnerability (CVE-2017-1000207 and CVE-2017-1000208)</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          Parsing YAML data from untrusted source can lead to arbitrary code execution. This post discusses a vulnerability of this type in Swagger Parser (caused by unsafe use of SnakeYaml), and shows how such vulnerabilities can be found using QL.
        </p>

        
        
        
        
        


        <a href="https://github.com/m-y-mo" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/15773368?s=35" height="35" width="35" /><span>Man Yue Mo</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/restlet_xml_external_entity_expansion_CVE-2017-14868/"><span>October 2, 2017</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>Security</li>
          
          <li>CVE</li>
          
          <li>CodeQL</li>
          
          <li>XXE</li>
          
          <li>Java</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/restlet_xml_external_entity_expansion_CVE-2017-14868/">Restlet XML External Entity Expansion Vulnerability (CVE-2017-14868)</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          Unsafe parsing of user input XML data allows remote attacker arbitrary file access.
        </p>

        
        
        
        
        


        <a href="https://github.com/m-y-mo" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/15773368?s=35" height="35" width="35" /><span>Man Yue Mo</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/spring_amqp_exploit_CVE-2017-8045/"><span>September 20, 2017</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>CVE</li>
          
          <li>CodeQL</li>
          
          <li>Security</li>
          
          <li>Java</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/spring_amqp_exploit_CVE-2017-8045/">Spring AMQP Exploit (CVE-2017-8045): Remote Code Execution Vulnerability</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          Deserialization of untrusted user data caused a severe remote code execution vulnerability in Spring AMQP's implementation for handling errors. This post explains the details of the vulnerability and how we found it using our query language.
        </p>

        
        
        
        
        


        <a href="https://github.com/m-y-mo" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/15773368?s=35" height="35" width="35" /><span>Man Yue Mo</span>
        </a>
      </div>
    </div>
    
    <div class="sc-kvZOFW cWQaeb d-flex flex-column flex-md-row mb-8 px-sm-0">
      <div class="col-12 col-md-3 text-gray-light">
        <a class="text-mono-alt" href="/research/apache-struts-vulnerability-cve-2017-9805/"><span>September 5, 2017</span></a>
      </div>
      <div class="col-12 col-md-9 pl-md-3">
        <ul class="post-tags d-flex flex-row flex-wrap mb-3 text-mono-alt text-gray-light">
          
          <li>CVE</li>
          
          <li>CodeQL</li>
          
          <li>Security</li>
          
          <li>Java</li>
          
          <li>Struts</li>
          
        </ul>
        <h4 class="h3-mktg mb-4"><a href="/research/apache-struts-vulnerability-cve-2017-9805/">CVE-2017-9805: How CodeQL found a remote code execution vulnerability in Apache Struts</a></h4>
        <p class="f4 text-gray text-mktg mb-0">
          Deserialization of untrusted user data caused a remote code execution vulnerability in Apache Struts. This post explains how CodeQL, LGTM's code query technology, was used to find this vulnerability.
        </p>

        
        
        
        
        


        <a href="https://github.com/m-y-mo" target="_blank" class="sc-frDJqD SgxRc mt-3 d-inline-flex flex-row flex-items-center text-gray">
          <img class="mr-3" src="https://avatars.githubusercontent.com/u/15773368?s=35" height="35" width="35" /><span>Man Yue Mo</span>
        </a>
      </div>
    </div>
    

  </div>
</div>

  </main>

  <footer class="sc-dVhcbM cBEMHy footer mt-6">
  <div class="container-xl p-responsive">
    <div class="d-flex flex-wrap py-5 mb-5">
      <div class="col-12 col-lg-4 mb-5">
        <a href="https://github.com/" data-ga-click="Footer, go to home, text:home" class="text-gray-dark" aria-label="Go to GitHub homepage">
          <svg height="30" class="octicon octicon-logo-github" viewBox="0 0 45 16" version="1.1" width="84" aria-hidden="true">
            <path fill-rule="evenodd" d="M18.53 12.03h-.02c.009 0 .015.01.024.011h.006l-.01-.01zm.004.011c-.093.001-.327.05-.574.05-.78 0-1.05-.36-1.05-.83V8.13h1.59c.09 0 .16-.08.16-.19v-1.7c0-.09-.08-.17-.16-.17h-1.59V3.96c0-.08-.05-.13-.14-.13h-2.16c-.09 0-.14.05-.14.13v2.17s-1.09.27-1.16.28c-.08.02-.13.09-.13.17v1.36c0 .11.08.19.17.19h1.11v3.28c0 2.44 1.7 2.69 2.86 2.69.53 0 1.17-.17 1.27-.22.06-.02.09-.09.09-.16v-1.5a.177.177 0 00-.146-.18zM42.23 9.84c0-1.81-.73-2.05-1.5-1.97-.6.04-1.08.34-1.08.34v3.52s.49.34 1.22.36c1.03.03 1.36-.34 1.36-2.25zm2.43-.16c0 3.43-1.11 4.41-3.05 4.41-1.64 0-2.52-.83-2.52-.83s-.04.46-.09.52c-.03.06-.08.08-.14.08h-1.48c-.1 0-.19-.08-.19-.17l.02-11.11c0-.09.08-.17.17-.17h2.13c.09 0 .17.08.17.17v3.77s.82-.53 2.02-.53l-.01-.02c1.2 0 2.97.45 2.97 3.88zm-8.72-3.61h-2.1c-.11 0-.17.08-.17.19v5.44s-.55.39-1.3.39-.97-.34-.97-1.09V6.25c0-.09-.08-.17-.17-.17h-2.14c-.09 0-.17.08-.17.17v5.11c0 2.2 1.23 2.75 2.92 2.75 1.39 0 2.52-.77 2.52-.77s.05.39.08.45c.02.05.09.09.16.09h1.34c.11 0 .17-.08.17-.17l.02-7.47c0-.09-.08-.17-.19-.17zm-23.7-.01h-2.13c-.09 0-.17.09-.17.2v7.34c0 .2.13.27.3.27h1.92c.2 0 .25-.09.25-.27V6.23c0-.09-.08-.17-.17-.17zm-1.05-3.38c-.77 0-1.38.61-1.38 1.38 0 .77.61 1.38 1.38 1.38.75 0 1.36-.61 1.36-1.38 0-.77-.61-1.38-1.36-1.38zm16.49-.25h-2.11c-.09 0-.17.08-.17.17v4.09h-3.31V2.6c0-.09-.08-.17-.17-.17h-2.13c-.09 0-.17.08-.17.17v11.11c0 .09.09.17.17.17h2.13c.09 0 .17-.08.17-.17V8.96h3.31l-.02 4.75c0 .09.08.17.17.17h2.13c.09 0 .17-.08.17-.17V2.6c0-.09-.08-.17-.17-.17zM8.81 7.35v5.74c0 .04-.01.11-.06.13 0 0-1.25.89-3.31.89-2.49 0-5.44-.78-5.44-5.92S2.58 1.99 5.1 2c2.18 0 3.06.49 3.2.58.04.05.06.09.06.14L7.94 4.5c0 .09-.09.2-.2.17-.36-.11-.9-.33-2.17-.33-1.47 0-3.05.42-3.05 3.73s1.5 3.7 2.58 3.7c.92 0 1.25-.11 1.25-.11v-2.3H4.88c-.11 0-.19-.08-.19-.17V7.35c0-.09.08-.17.19-.17h3.74c.11 0 .19.08.19.17z"></path>
          </svg>
        </a>
      </div>
      <div class="col-6 col-sm-3 col-lg-2 mb-6 mb-md-2 pr-3 pr-lg-0 pl-lg-4">
        <h2 class="h5 mb-3 text-mono text-gray-light text-normal">Product</h2>
        <ul class="list-style-none text-gray f5">
          <li class="lh-condensed mb-3"><a href="https://github.com/features" data-ga-click="Footer, go to features, text:features" class="link-gray">Features</a></li>
          <li class="lh-condensed mb-3"><a href="https://github.com/security" data-ga-click="Footer, go to security, text:security" class="link-gray">Security</a></li>
          <li class="lh-condensed mb-3"><a href="https://github.com/enterprise" data-ga-click="Footer, go to enterprise, text:enterprise" class="link-gray">Enterprise</a></li>
          <li class="lh-condensed mb-3"><a href="https://github.com/customer-stories?type=enterprise" data-ga-click="Footer, go to customer stories, text:customer stories" class="link-gray">Customer stories</a></li>
          <li class="lh-condensed mb-3"><a href="https://github.com/pricing" data-ga-click="Footer, go to pricing, text:pricing" class="link-gray">Pricing</a></li>
          <li class="lh-condensed mb-3"><a href="https://resources.github.com" data-ga-click="Footer, go to resources, text:resources" class="link-gray">Resources</a></li>
        </ul>
      </div>
      <div class="col-6 col-sm-3 col-lg-2 mb-6 mb-md-2 pr-3 pr-md-0 pl-md-4">
        <h2 class="h5 mb-3 text-mono text-gray-light text-normal">Platform</h2>
        <ul class="list-style-none f5">
          <li class="lh-condensed mb-3"><a href="https://developer.github.com" data-ga-click="Footer, go to api, text:api" class="link-gray">Developer API</a></li>
          <li class="lh-condensed mb-3"><a href="http://partner.github.com/" data-ga-click="Footer, go to partner, text:partner" class="link-gray ">Partners</a></li>
          <li class="lh-condensed mb-3"><a href="https://atom.io" data-ga-click="Footer, go to atom, text:atom" class="link-gray ">Atom</a></li>
          <li class="lh-condensed mb-3"><a href="http://electron.atom.io/" data-ga-click="Footer, go to electron, text:electron" class="link-gray ">Electron</a></li>
          <li class="lh-condensed mb-3"><a href="https://desktop.github.com/" data-ga-click="Footer, go to desktop, text:desktop" class="link-gray ">GitHub Desktop</a></li>
        </ul>
      </div>
      <div class="col-6 col-sm-3 col-lg-2 mb-6 mb-md-2 pr-3 pr-md-0 pl-md-4">
        <h2 class="h5 mb-3 text-mono text-gray-light text-normal">Support</h2>
        <ul class="list-style-none f5">
          <li class="lh-condensed mb-3"><a data-ga-click="Footer, go to help, text:docs" class="link-gray " href="https://docs.github.com">Docs</a></li>
          <li class="lh-condensed mb-3"><a href="https://github.community" data-ga-click="Footer, go to community, text:community" class="link-gray ">Community Forum</a></li>
          <li class="lh-condensed mb-3"><a href="https://services.github.com/" data-ga-click="Footer, go to professional services, text:professional services" class="link-gray ">Professional Services</a></li>
          <li class="lh-condensed mb-3"><a href="https://lab.github.com/" data-ga-click="Footer, go to learning lab, text:learning lab" class="link-gray ">Learning Lab</a></li>
          <li class="lh-condensed mb-3"><a href="https://githubstatus.com/" data-ga-click="Footer, go to status, text:status" class="link-gray ">Status</a></li>
          <li class="lh-condensed mb-3"><a data-ga-click="Footer, go to contact, text:contact" class="link-gray " href="https://support.github.com">Contact GitHub</a></li>
        </ul>
      </div>
      <div class="col-6 col-sm-3 col-lg-2 mb-6 mb-md-2 pr-3 pr-md-0 pl-md-4">
        <h2 class="h5 mb-3 text-mono text-gray-light text-normal">Company</h2>
        <ul class="list-style-none f5">
          <li class="lh-condensed mb-3"><a data-ga-click="Footer, go to about, text:about" class="link-gray " href="https://github.com/about">About</a></li>
          <li class="lh-condensed mb-3"><a href="https://github.blog" data-ga-click="Footer, go to blog, text:blog" class="link-gray">Blog</a></li>
          <li class="lh-condensed mb-3"><a href="https://github.com/about/careers" data-ga-click="Footer, go to careers, text:careers" class="link-gray">Careers</a></li>
          <li class="lh-condensed mb-3"><a href="https://github.com/about/press" data-ga-click="Footer, go to press, text:press" class="link-gray">Press</a></li>
          <li class="lh-condensed mb-3"><a href="https://shop.github.com" data-ga-click="Footer, go to shop, text:shop" class="link-gray">Shop</a></li>
        </ul>
      </div>
    </div>
  </div>
  <div class="bg-gray-light">
    <div class="container-xl p-responsive f6 py-4 d-sm-flex flex-justify-between flex-row-reverse flex-items-center">
      <ul class="list-style-none d-flex flex-items-center mb-3 mb-sm-0 lh-condensed-ultra social-icons">
        <li class="mr-3">
          <a href="https://twitter.com/github" data-ga-click="Footer, go to Twitter, text:twitter" title="GitHub on Twitter">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 273.5 222.3" class="d-block" height="18">
              <path d="M273.5 26.3a109.77 109.77 0 0 1-32.2 8.8 56.07 56.07 0 0 0 24.7-31 113.39 113.39 0 0 1-35.7 13.6 56.1 56.1 0 0 0-97 38.4 54 54 0 0 0 1.5 12.8A159.68 159.68 0 0 1 19.1 10.3a56.12 56.12 0 0 0 17.4 74.9 56.06 56.06 0 0 1-25.4-7v.7a56.11 56.11 0 0 0 45 55 55.65 55.65 0 0 1-14.8 2 62.39 62.39 0 0 1-10.6-1 56.24 56.24 0 0 0 52.4 39 112.87 112.87 0 0 1-69.7 24 119 119 0 0 1-13.4-.8 158.83 158.83 0 0 0 86 25.2c103.2 0 159.6-85.5 159.6-159.6 0-2.4-.1-4.9-.2-7.3a114.25 114.25 0 0 0 28.1-29.1" fill="currentColor"></path>
            </svg>
          </a>
        </li>
        <li class="mr-3">
          <a href="https://www.facebook.com/GitHub" data-ga-click="Footer, go to Facebook, text:facebook" title="GitHub on Facebook">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 15.3 15.4" class="d-block" height="18">
              <path d="M14.5 0H.8a.88.88 0 0 0-.8.9v13.6a.88.88 0 0 0 .8.9h7.3v-6h-2V7.1h2V5.4a2.87 2.87 0 0 1 2.5-3.1h.5a10.87 10.87 0 0 1 1.8.1v2.1h-1.3c-1 0-1.1.5-1.1 1.1v1.5h2.3l-.3 2.3h-2v5.9h3.9a.88.88 0 0 0 .9-.8V.8a.86.86 0 0 0-.8-.8z" fill="currentColor"></path>
            </svg>
          </a>
        </li>
        <li class="mr-3">
          <a href="https://www.youtube.com/github" data-ga-click="Footer, go to YouTube, text:youtube" title="GitHub on YouTube">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 19.17 13.6" class="d-block" height="16">
              <path d="M18.77 2.13A2.4 2.4 0 0 0 17.09.42C15.59 0 9.58 0 9.58 0a57.55 57.55 0 0 0-7.5.4A2.49 2.49 0 0 0 .39 2.13 26.27 26.27 0 0 0 0 6.8a26.15 26.15 0 0 0 .39 4.67 2.43 2.43 0 0 0 1.69 1.71c1.52.42 7.5.42 7.5.42a57.69 57.69 0 0 0 7.51-.4 2.4 2.4 0 0 0 1.68-1.71 25.63 25.63 0 0 0 .4-4.67 24 24 0 0 0-.4-4.69zM7.67 9.71V3.89l5 2.91z" fill="currentColor"></path>
            </svg>
          </a>
        </li>
        <li class="mr-3 flex-self-start">
          <a href="https://www.linkedin.com/company/github" data-ga-click="Footer, go to Linkedin, text:linkedin" title="GitHub on Linkedin">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 19 18" class="d-block" height="18">
              <path d="M3.94 2A2 2 0 1 1 2 0a2 2 0 0 1 1.94 2zM4 5.48H0V18h4zm6.32 0H6.34V18h3.94v-6.57c0-3.66 4.77-4 4.77 0V18H19v-7.93c0-6.17-7.06-5.94-8.72-2.91z" fill="currentColor"></path>
            </svg>
          </a>
        </li>
        <li>
          <a href="https://github.com/github" data-ga-click="Footer, go to github's org, text:github" title="GitHub's organization">
            <svg height="20" class="octicon octicon-mark-github d-block" viewBox="0 0 16 16" version="1.1" width="20" aria-hidden="true">
              <path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z"></path>
            </svg>
          </a>
        </li>
      </ul>
      <ul class="list-style-none d-flex text-gray">
        <li class="mr-3">
          © <!-- -->2021<!-- --> GitHub, Inc.
        </li>
        <li class="mr-3"><a href="https://docs.github.com/en/github/site-policy/github-terms-of-service" data-ga-click="Footer, go to terms, text:terms" class="link-gray">Terms</a></li>
        <li class="mr-3"><a href="https://docs.github.com/en/github/site-policy/github-privacy-statement" data-ga-click="Footer, go to privacy, text:privacy" class="link-gray">Privacy</a></li>
        <li><a href="#" class="link-gray">Cookie settings</a></li>
      </ul>
    </div>
  </div>
</footer>


  <!-- JAVASCRIPT -->
  <script src="/assets/js/main.js"></script>
</body>
</html>
